# Block all traffic outside of the local machine.
bind 127.0.0.1

# Prevent exploits of public Redis (default).
protected-mode yes

# Use standard port 6379.
port 6379

# TCP BACKLOG
#
# The Linux kernel will truncate independently, so
# we would need to raise the value of:
#
# /proc/sys/net/core/somaxconn
# /proc/sys/net/core/tcp_max_syn_backlog
#
# on our server in order to achieve the effect desired.
tcp-backlog 511

# Disable idle timeout for disconnecting clients.
timeout 0

# Allow for detection of and disconnection from dead peers.
tcp-keepalive 300

# Docker entry_point.sh "automagically" runs Redis as a daemon.
daemonize no

supervised no
pidfile /var/run/redis_6379.pid
loglevel notice
logfile "redis_6379.log"

# We only need one database for our app.
databases 16

# Save every 15 mins if 1 key changed,
# save every 5 mins if 10 keys changed,
#save every 1 mins if 1000 keys changed.
save 900 1
save 300 10
save 60 1000

# Prevent fatal crash of Redis when save fails.
stop-writes-on-bgsave-error no

# Apply corruption resistance to the RDB file.
rdbchecksum yes

# Specify dump file.
dbfilename dump.rdb

# Working directory where Redis stores RDB and AOF.
dir ./

# Place our secrets into an ACL file.
aclfile /etc/redis/users.acl

# Restrict number of clients.
maxclients 1000

# Use non-blocking object deletion.
lazyfree-lazy-evicition yes
lazyfree-lazy-expire yes
lazyfree-lazy-server-del yes
lazyfree-lazy-flush yes

# Optional non-blocking of DEL calls.
# lazyfree-lazy-user-del no

# Enable appendonly mode for greater durability of backup data.
appendonly yes

# Specify AOF file.
appendfilename "appendonly.aof"

# Best practice fsync setting for production.
appendfsync everysec

# Optionally prevent a possible (but rare) blocking
# delay caused by an fsync() call during BGSAVE or BGREWRITEAOF.
no-appendfsync-on-rewrite no

# Growth percentage past previous AOF file to trigger rewrite.
auto-aof-rewrite-percentage 100

# Minimum size of AOF file that triggers rewrite if exceeded.
auto-aof-rewrite-min-size 8mb

# Prevent fatal crash of Redis due to corruption (can still fail).
aof-load-truncated yes

# Speed up rewrites of AOF by using an RDB preamble in the data.
aof-use-rdb-preamble yes