version: '3'

services:
  # Our golang GraphQL server that sends gRPC requests.
  api:
    container_name: api_svc
    build:
      context: ./api
      dockerfile: ./Dockerfile
    depends_on:
      - redis
      - user
    restart: unless-stopped
    ports:
      - target: 9000
        published: 80
        protocol: tcp
        mode: host
    networks:
      - backend

  # The MongoDB instance that holds our databases.
  mongo:
    container_name: mongo_svc
    environment:
      # NOTE:
      # These variables are for initialization purposes only.
      # Credentials of the root user will be updated and rotated.
      # Passing these variables enforces authentication requirement
      # for all `mongo` shells.
      #
      # UPDATE: 10-19-2020
      # The value of these variables will be managed by Vault.
      - MONGO_INITDB_ROOT_USERNAME_FILE=/usr/local/etc/mongodb/mongo-seed-username
      - MONGO_INITDB_ROOT_PASSWORD_FILE=/usr/local/etc/mongodb/mongo-seed-password
      - MONGO_INITDB_DATABASE=admin
    build:
      context: ./mongo
      dockerfile: ./Dockerfile
    depends_on:
      - truth
    restart: unless-stopped
    ports:
      - '27017'
    expose:
      - '27017'
    networks:
      - backend
    volumes:
      # A volume to persist our NoSQL data store.
      - type: volume
        source: persist_mongo
        target: /data/db
        volume:
          nocopy: true

  # The Redis instance that holds our user IDs (UUID v4).
  redis:
    container_name: redis_svc
    build:
      context: ./redis
      dockerfile: ./Dockerfile
    depends_on:
      - truth
    restart: unless-stopped
    # These settings allow tcp-backlog in
    # ./redis/redis.conf to not be capped.
    sysctls:
      net.core.somaxconn: 1024
      net.ipv4.tcp_syncookies: 0
    # This setting is required to disable THP support
    # (for now).
    privileged: true
    ports:
      - '6379'
    expose:
      - '6379'
    networks:
      - backend
    volumes:
      # A volume for persisting our in-memory data store.
      - type: volume
        source: persist_redis
        target: /data
        volume:
          nocopy: true

  user:
    container_name: user_svc
    build:
      context: ./services/user
      dockerfile: ./Dockerfile
    depends_on:
      - mongo
    restart: unless-stopped
    ports:
      - '50051'
    expose:
      - '50051'
    networks:
      - backend

  truth:
    container_name: truth_src
    cap_add:
      # Required for Vault to lock memory (best practice).
      - IPC_LOCK
    build:
      context: ./security
      dockerfile: ./Dockerfile
    restart: always
    ports:
      - '8200'
    expose:
      - '8200'
    networks:
      - backend
    volumes:
      # Used by the `file` audit backend to persist storage data.
      - type: volume
        source: persist_vault_data
        target: /vault/file
        volume:
          nocopy: true # Necessary?
      # Used to persist audit logs, REQUIRES `file` audit backend enabled.
      - type: volume
        source: persist_vault_logs
        target: /vault/logs
        volume:
          nocopy: true # Necessary?
      - type: bind
        source: ./security/encoded
        target: /encoded
      - type: bind
        source: ./security/public
        target: /public

networks:
  # frontend:
  backend:

volumes:
  persist_mongo:
  persist_redis:
  persist_vault_data: # Bind mounts instead for Vault volumes?
  persist_vault_logs:
