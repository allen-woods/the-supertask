syntax = "proto3";

package user;

option go_package = "user;userpb";

// Create a message for new users.
// IMPORTANT:
// - Don't pass "id" when creating because the user is new.
// - Has hashed and salted "password" field.
message NewOrEditedUser {
  string id = 1;
  string email = 2;
  string name = 3;
  string userName = 4;
  string password = 5;
}

// Create a message for a registered user.
// IMPORTANT:
// - Has "id" field because the user is registered.
// - No "password" field because we should never return it.
message User {
  string id = 1;
  string email = 2;
  string name = 3;
  string userName = 4;
}

// No "id".
message CreateUserReq {
  NewOrEditedUser user = 1;
}

// No "password".
message CreateUserRes {
  User user = 1;
}

// No "password".
message ReadUserReq {
  string id = 1;
}
// No "password".
message ReadUserRes {
  User user = 1;
}

// Has both "id" and "password".
message UpdateUserReq {
  NewOrEditedUser user = 1;
}

// No "password".
message UpdateUserRes {
  User user = 1;
}

// No "password".
message DeleteUserReq {
  string id = 1;
}

message DeleteUserRes {
  bool success = 1;
}

// No args.
message ListUsersReq {}

// No "password".
message ListUsersRes {
  User user = 1;
}

service UserService {
  rpc CreateUser(CreateUserReq) returns (CreateUserRes);
  rpc ReadUser(ReadUserReq) returns (ReadUserRes);
  rpc UpdateUser(UpdateUserReq) returns (UpdateUserRes);
  rpc DeleteUser(DeleteUserReq) returns (DeleteUserRes);
  rpc ListUsers(ListUsersReq) returns (stream ListUsersRes);
}

